/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.prolib.aquila.JQTrans;

public class JQTransHandler {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected JQTransHandler(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(JQTransHandler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JQTransJNI.delete_JQTransHandler(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    JQTransJNI.JQTransHandler_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    JQTransJNI.JQTransHandler_change_ownership(this, swigCPtr, true);
  }

  public JQTransHandler() {
    this(JQTransJNI.new_JQTransHandler(), true);
    JQTransJNI.JQTransHandler_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void OnConnectionStatus(int connEvent, int errCode, String errMsg) {
    if (getClass() == JQTransHandler.class) JQTransJNI.JQTransHandler_OnConnectionStatus(swigCPtr, this, connEvent, errCode, errMsg); else JQTransJNI.JQTransHandler_OnConnectionStatusSwigExplicitJQTransHandler(swigCPtr, this, connEvent, errCode, errMsg);
  }

  public void OnTransactionReply(int resultCode, int errCode, int replyCode, long transId, long orderId, String replyMsg) {
    if (getClass() == JQTransHandler.class) JQTransJNI.JQTransHandler_OnTransactionReply(swigCPtr, this, resultCode, errCode, replyCode, transId, orderId, replyMsg); else JQTransJNI.JQTransHandler_OnTransactionReplySwigExplicitJQTransHandler(swigCPtr, this, resultCode, errCode, replyCode, transId, orderId, replyMsg);
  }

  public void OnOrderStatus(QTransOrderStatus status) {
    if (getClass() == JQTransHandler.class) JQTransJNI.JQTransHandler_OnOrderStatus(swigCPtr, this, QTransOrderStatus.getCPtr(status), status); else JQTransJNI.JQTransHandler_OnOrderStatusSwigExplicitJQTransHandler(swigCPtr, this, QTransOrderStatus.getCPtr(status), status);
  }

  public void OnTradeStatus(QTransTradeStatus status) {
    if (getClass() == JQTransHandler.class) JQTransJNI.JQTransHandler_OnTradeStatus(swigCPtr, this, QTransTradeStatus.getCPtr(status), status); else JQTransJNI.JQTransHandler_OnTradeStatusSwigExplicitJQTransHandler(swigCPtr, this, QTransTradeStatus.getCPtr(status), status);
  }

}
